set nocompatible                " Enables us Vim specific features
syntax on
filetype plugin on
filetype indent on  " Automatically indent
set showmatch       " Show matching brace
set paste           " Make insert mode better support paste
set shiftwidth=4    " Indent == 4 spaces
set tabstop=4       " Tab == 4 spaces
set softtabstop=4   " Let backspace delete indent
set expandtab       " Tabs are spaces :(
set shiftround      " Tab as multiples of shiftwidth
set number          " Number lines
set relativenumber  " Number lines relative to the line cursor is on
set incsearch       " Start searching on first keystroke (don't wait for enter)
set ruler           " put a ruler in the bottom right corner
set backspace=eol,start,indent  " Backspace through newlines
set scrolloff=2     " Don't let the cursor get to the bottom of the page
set nowrap          " Do not wrap long lines
set nojoinspaces    " Prevents inserting two spaces after punctuation on a join (J)
set splitright      " Puts new vsplit windows to the right of the current
set splitbelow      " Puts new split windows to the bottom of the current
set autoread        " Update loaded files when changed externally if no local edits
set autowrite       " Write whenever :make is called
set ttyfast         " Indicate fast terminal conn for faster redraw
set visualbell      " Prevent noises
set t_vb=           " Prevent noises


set omnifunc=syntaxcomplete#Complete

set smartcase                   " Smart case insensitive searching
                                "/copyright      " Case insensitive
                                "/Copyright      " Case sensitive
                                "/copyright\C    " Case sensitive
                                "/Copyright\c    " Case insensitive

set tw=79                       "Tetxidth = 2 (use gq to wrap)

" Prevent tabs from expanding to spaces in Makefiles
autocmd FileType make setlocal noexpandtab
" Prevent tabs from expanding to spaces in Go
autocmd FileType go setlocal noexpandtab

" Map moving to simpler motions
map <c-h> <c-w>h
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l

"map <c-tab> gt
"map <c-S-tab> gT

"Fix bad habits
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Keep selection selected after indent
vmap > >gv
vmap < <gv

" Make Y consistent with C and D
nnoremap Y y$
" Don't jank my yank!
vnoremap <expr>y "my\"" . v:register . "y`y"

" Make cw consistent with dw, yw, vw
onoremap w :execute 'normal! '.v:count1.'w'<CR>

" Fix tab completion
set wildmode=longest,list,full
set wildmenu

" Fix slow scrolling (due to having to redraw screen)
"set lazyredraw

" Fixes escape timeout (may change last to 10)
set timeoutlen=1000 ttimeoutlen=0

" <Ctrl-c> redraws the screen and removes any search highlighting.
nnoremap <silent> <C-c> :nohl<CR><C-c>


" Remove trailing whitespace
nnoremap <F2> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

" Highlight git merge conflict
set hlsearch
map <F3> :/\(<<<<<<<\\|=======\\|>>>>>>>\)<CR>

""""""""""
" Python "
""""""""""
augroup python_functions
    autocmd!
    " Sort imports with isort
    autocmd FileType python nnoremap <buffer> <F5> :execute ':!isort %'<CR>
    " Reformat with black
    autocmd FileType python nnoremap <buffer> <F6> :Black<CR>
    " Check types with MyPy
    autocmd FileType python nnoremap <buffer> <F7> :Mypy<CR>
    " Lint with Flake8
    autocmd FileType python nnoremap <buffer> <F8> :call flake8#Flake8()<CR>
    " Pytest doctest
    autocmd Filetype python nnoremap <buffer> <F9> :execute ':!python -m doctest %'<CR>
augroup end

" This enables us to undo files even if you exit Vim.
if has('persistent_undo')
  set undofile
  set undodir=~/.config/vim/tmp/undo/
endif

""""""""""""""""
" Running Code "
""""""""""""""""
au FileType python map <leader>r :!python3 %<CR>
au FileType python map <leader>t :!pytest %<CR>
au FileType zsh map <leader>r :!zsh %<CR>
au FileType r map <leader>r :!Rscript %<CR>
au FileType rust map <leader>r :!cargo run<CR>
au FileType rust map <leader>t :!cargo test<CR>

""""""""""""
" Vim-Plug "
""""""""""""
source ~/.vim/plug.vim
